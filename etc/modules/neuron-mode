#!/usr/bin/emacs --script
(use-package neuron-mode
  :straight t
  :config
;;; tools/neuron/config.el -*- lexical-binding: t; -*-
(defun assoc-delete-all (key alist &optional test)
  "Delete from ALIST all elements whose car is KEY.
Compare keys with TEST.  Defaults to `equal'.
Return the modified alist.
Elements of ALIST that are not conses are ignored."
  (unless test (setq test #'equal))
  (while (and (consp (car alist))
	      (funcall test (caar alist) key))
    (setq alist (cdr alist)))
  (let ((tail alist) tail-cdr)
    (while (setq tail-cdr (cdr tail))
      (if (and (consp (car tail-cdr))
	       (funcall test (caar tail-cdr) key))
	  (setcdr tail (cdr tail-cdr))
	(setq tail tail-cdr))))
  alist)


(setq neuron-default-zettelkasten-directory (expand-file-name "/home/alexander/Binary/Publish/Neuron/alexsoto.dev"))

(defun search-zettelkasten ()
  "Search zettels by content."
  (interactive)
  (progn
    (+ivy-file-search :in neuron-zettelkasten :recursive nil :prompt "Search Zettelkasten: ")
    (neuron-mode)))

  )
