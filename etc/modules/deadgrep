#!/usr/bin/emacs --script

(use-package deadgrep
  :straight t
  :defer 2
  :init

  (defun dg-current-directory (search-term directory)
  "Start a ripgrep search for SEARCH-TERM from DIRECTORY.
If called with a prefix argument, create the results buffer but
don't actually start the search."
  (interactive
   (list (deadgrep--read-search-term)
         (read-directory-name "Directory: "
                              default-directory)))
  (let ( (deadgrep-project-root-function (list 'lambda '() directory)) )
    (deadgrep search-term)
    ))

(defun dg (search-term directory)
  "Start a ripgrep search for SEARCH-TERM from DIRECTORY.
If called with a prefix argument, create the results buffer but
don't actually start the search."
  (interactive
   (list (deadgrep--read-search-term)
         (read-directory-name "Directory: "
                              (funcall deadgrep-project-root-function))))
  (let ( (deadgrep-project-root-function (list 'lambda '() directory)) )
    (deadgrep search-term)
    ))

(defun as/dired-deadgrep ()
  (interactive)
  (let* ((title (read-from-minibuffer "Search term: ")))
    (dg-current-directory title (concat dired-directory (thing-at-point 'filename)))))

(defun as/deadgrep-global ()
  (interactive)
  (let* ((title (read-from-minibuffer "Search term: ")))
    (dg-current-directory title "~/")))


(define-key dired-mode-map (kbd "s") 'as/dired-deadgrep)



)
