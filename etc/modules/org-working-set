#!/usr/bin/emacs --script

(use-package org-working-set
  :straight t
  :config
  (defun as/working-set ()
    (interactive)
    (save-excursion
      (search-forward-regexp thing-at-point-uuid-regexp)
      (backward-char 1)
      (let ((as (thing-at-point 'uuid t)))
        (setq org-working-set-id as)))
    (org-working-set))

  (defun as/working-set-add-agenda ()
    (interactive)
    (org-agenda-goto)
    (org-working-set--add)
    (ace-window 1)
    (delete-other-windows)
    (message "Node added to working-set"))

  (defun as/working-set-add ()
    (interactive)
    (org-working-set--add)
    (message "Node added to working-set"))

  (defun as/working-set-clock-in ()
    (interactive)
    (save-window-excursion
      (org-working-set-menu-go--this-win)
      (message "Clocked in")))

  (add-hook 'org-agenda-mode-hook
            '(lambda () (org-defkey org-agenda-mode-map "a" 'as/working-set-add-agenda))
            'append)

  )
